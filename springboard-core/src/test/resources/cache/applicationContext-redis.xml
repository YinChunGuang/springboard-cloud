<?xml version="1.0" encoding="UTF-8"?>
<beans
    xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context" xmlns:cache="http://www.springframework.org/schema/cache"
    xmlns:c="http://www.springframework.org/schema/c" xmlns:p="http://www.springframework.org/schema/p"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd">

    <!-- turn on declarative caching -->
    <cache:annotation-driven cache-manager="cacheManager"/>
    
    <!-- jedis 连接池配置-->
    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">  
        <property name="maxIdle"       value="${redis.pool.maxIdle}" />    
        <property name="testOnBorrow"  value="${redis.pool.testOnBorrow}" />  
    </bean>  
    
    <!-- jedis 多个服务器配置 
    <bean id="jedisShardInfo1" class="redis.clients.jedis.JedisShardInfo">  
        <constructor-arg index="0" value="${redis2.ip}" />  
        <constructor-arg index="1" value="${redis.port}" type="int" />  
    </bean> 
    <bean id="jedisShardInfo2" class="redis.clients.jedis.JedisShardInfo">  
        <constructor-arg index="0" value="${redis.ip}" />  
        <constructor-arg index="1" value="${redis.port}" type="int" />  
    </bean>   
    <bean id="shardedJedisPool" class="redis.clients.jedis.ShardedJedisPool">  
        <constructor-arg index="0" ref="jedisPoolConfig" />  
        <constructor-arg index="1">
            <list>
                <ref bean="jedisShardInfo1" />
                <ref bean="jedisShardInfo2"/>
            </list>
        </constructor-arg>  
    </bean>
    <bean id="connectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <property name="hostName"   value="${redis.host}" />  
        <property name="port"       value="${redis.port}" />  
        <property name="poolConfig" ref="jedisPoolConfig" /> 
        <property name="shardInfo"  ref="shardedJedisPool"></property>
    </bean>   -->
 
    <!-- Jedis ConnectionFactory -->
    <bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
        p:host-name="${redis.host}" p:port="${redis.port}" p:use-pool="true"/>
 
    <!-- redis template definition -->
    <bean id="stringRedisSerializer" class="org.springframework.data.redis.serializer.StringRedisSerializer" />
    <bean id="JdkSerializationRedisSerializer" class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />
    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
         <property name="connectionFactory" ref="jedisConnectionFactory" />
         <property name="keySerializer" ref="stringRedisSerializer" />     
         <!-- <property name="valueSerializer" ref="JdkSerializationRedisSerializer" />  -->
    </bean>
 
    <!-- declare Redis Cache Manager -->
    <bean id="cacheManager" class="org.springframework.data.redis.cache.RedisCacheManager" >
        <!-- c:template-ref="redisTemplate"> -->
        <constructor-arg index="0">
            <bean class="org.springframework.data.redis.core.RedisTemplate">
                 <property name="connectionFactory" ref="jedisConnectionFactory" />
                 <property name="keySerializer" ref="JdkSerializationRedisSerializer" />     
            </bean>
        </constructor-arg>  
        <property name="expires">
            <!-- 设置超时时间，单位秒 --> 
            <map>  
                <entry key="messageCache" value="10"/>  
            </map> 
        </property> 
    </bean>
</beans>